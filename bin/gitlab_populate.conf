# Configuration file for script gitlab_populate.sh
# The script will recreate on destination_giturl the groups and projects
# present in the puppetfile_file and the controlrepo_path
# It also takes care of syncing the gir repos.

# Prerequisites:
# - Valid token for a user on target GitLab with permissions to create groups and projects
# - Access via https or ssh to source_giturl or destination_giturl
# - If ssh is used Valid ssh-keys to access git repos on source_giturl and destination_giturl
# - Git command
# - gitlab Ruby gem (the cli to access to gitlab)

# Configure here hostname / IP of your GitLab server
GITLAB_API_ENDPOINT=https://10.42.100.26/api/v4

# Configure with the access token of a user which has powers to create groups and projects
# The access token has to be setup from user Settings, with API access privileges 
GITLAB_API_PRIVATE_TOKEN=UGZZcx1JN8ugY89nzquV

# We ignore self signed certs on GitLab
GITLAB_API_HTTPARTY_OPTIONS="{verify: false}"

# Path of the Puppetfile with list of modules to use
puppetfile_file="${BASEDIR}/Puppetfile"

# Path of control-repo on Git Servers
controlrepo_path="example42/psick"
#controlrepo_path="puppet/dtt-puppet-control-repo" # DTT

# URL of source git server (from where to clone/pull repos)
# Format: https://github.com/ or git@github.com:
source_giturl="https://github.com/"
#source_giturl="git@git:" # DTT

# URL of destination git server (to where to push repos)
# Format: https://github.com/ or git@github.com:
destination_giturl="git@10.42.100.26:"
# destination_giturl="git@10.42.100.26:" # DTT 

# Local work dir (where repos are cloned)
workdir="${BASEDIR}/gitrepos"